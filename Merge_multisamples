### step1 load R packages
suppressPackageStartupMessages({
    library(Seurat)
    library(stringr)
    library(dplyr)
})
print("==============Packages Ready=================")
### step2 setting file site
file_site="/opt/tsinghua/lss/scData/GSE114530/Kidney_Kidney_Hochane2019/"
rds="/opt/xiongyifan/scRNA_project/test_data/project_repeat/"##Kidney_Kidney_Lake2021.rds
### combind merge expression_43878.tsv and metadata.tsv
### 定义一个函数seurat，包含x ,y 两个参数。参数x代表expression_43878.tsv文件，参数y代表metadata.tsv文件。使用for循环依次将x以read.table的形式
### 读入并且以list的形式存放（file.list[x1,x2,x3,x4,....,xn]）。使用R包Seurat中的CreateSeuratObject函数对x创建对象。设置变量j=1，使用while循环
### 对x1,x2,x3,....,xn进行merge。同理，对y进行merge。使用rbind函数（根据行进行合并，就是行的叠加，m行的矩阵与n行的矩阵rbind()最后变成m+n行，
### 合并前提：rbind(a, c)中矩阵a、c的列数必需相符）
seurat<-function(x,y){
    file.list=list()
    for (i in 1:length(x)){
        file.list[[i]]<-read.table(x[[i]],,h = T,sep='\t',row.names = 1,check.names = F)
        file.list[[i]] <- CreateSeuratObject(file.list[[i]],min.cell=3,min.features=200)
        }
    j=1
    while (j <= (length(x)-1)){
        if (j==1){
            seaurat_merge<-merge(file.list[[j]], file.list[[j+1]])
            j=j+1
            }
        else {
            seaurat_merge<-merge(seaurat_merge,file.list[[j+1]])
            j=j+1
            }
        }
    file.list=list()
    for (i in 1:length(y)){
        file.list[[i]]<-read.table(y[[i]],h = T,sep='\t',row.names = 1)
        }
    j=1
    while (j <= (length(y)-1)){
        if (j==1){
            metadata_merge<-rbind(file.list[[j]], file.list[[j+1]])
            j=j+1
            }
        else {
            metadata_merge<-rbind(metadata_merge,file.list[[j+1]])
            j=j+1
            }
        }
    z<-list(seaurat_merge,metadata_merge)
    return (z)
}
jd<-function(genes){
    res = length(genes)
    if (res < 5) {
        if (res<=3){        
            options(repr.plot.width=14, repr.plot.height=5*1, repr.plot.res = 200)
            print(FeaturePlot(dataobj,features = genes,pt.size = pt.size,order = T,ncol=3))
            options(repr.plot.width=14, repr.plot.height=5*1, repr.plot.res = 200)
            print(VlnPlot(dataobj,features = genes,pt.size = 0,ncol=1)) 
        }
        else {
            options(repr.plot.width=14, repr.plot.height=5*1, repr.plot.res = 200)
            print(FeaturePlot(dataobj,features = genes,pt.size = pt.size,order = T,ncol=3))
            options(repr.plot.width=14, repr.plot.height=5*2, repr.plot.res = 200)
            print(VlnPlot(dataobj,features = genes,pt.size = 0,ncol=1))
        }

    }
    else {
        options(repr.plot.width=14, repr.plot.height=5*1, repr.plot.res = 200)
        print(FeaturePlot(dataobj,features = genes,pt.size = pt.size,order = T,ncol=3))
        options(repr.plot.width=14, repr.plot.height=5*(res-3), repr.plot.res = 200)
        print(VlnPlot(dataobj,features = genes,pt.size = 0,ncol=1))
    }
}
print("===============Data merge and plot normalize Ready==============")
setwd(file_site)
list1=as.character(list.files(path=file_site,pattern = "*43878*"))
list2=as.character(list.files(path=file_site,pattern = "*metadata*"))
data<-seurat(list1,list2)
df<- data[[1]]
df<- NormalizeData(df)
df<- ScaleData(df)
df <- FindVariableFeatures(df, selection.method = "vst", nfeatures = 2000)
df <- RunPCA(df,features = VariableFeatures(object = df))
ElbowPlot(df,ndims=50)
pcDim = 30
df <- RunUMAP(df, dims = 1:pcDim)
df<-AddMetaData(df,data[[2]])
table(df@meta.data$donor_ID)
options(repr.plot.width=14, repr.plot.height=8, repr.plot.res = 200)
DimPlot(df,reduction = "umap",group.by = "donor_ID")
dataobj <- data[[1]]
dataobj@meta.data$percent.mt <- PercentageFeatureSet(dataobj, pattern = "^[Mm][Tt]")
dataobj$percent.mt <- as.double(dataobj$percent.mt)
options(repr.plot.width=8, repr.plot.height=6, repr.plot.res = 200)
pt.size=0.1
VlnPlot(dataobj, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3,pt.size = 0.01)
nFeature_RNA_range = c(200, 5000)##根据VlnPlot的nFeature_RNA进行选择
percent.mt.thre = 10##根据percent.mt进行选择
dataobj <- subset(dataobj, subset = nFeature_RNA > nFeature_RNA_range[1] & nFeature_RNA < nFeature_RNA_range[2] & percent.mt < percent.mt.thre)
options(warn = -1)
dataobj <- NormalizeData(dataobj)
dataobj <- ScaleData(dataobj)
dataobj <- FindVariableFeatures(dataobj, selection.method = "vst", nfeatures = 2000)
dataobj <- RunPCA(dataobj,features = VariableFeatures(object = dataobj))
ElbowPlot(dataobj,ndims=50)
pcDim = 30
dataobj <- RunUMAP(dataobj, dims = 1:pcDim)
dataobj <- FindNeighbors(dataobj, reduction = "pca", dims = 1:pcDim, nn.eps = 0.5)
dataobj <- FindClusters(dataobj, resolution = 1, n.start = 10)
options(repr.plot.width=14, repr.plot.height=8, repr.plot.res = 200)
DimPlot(dataobj,reduction = "umap",label = T)
jd(c("OSR1","CITED1","EYA1","SIX1","MEOX1"))
dataobj <- RenameIdents(object = dataobj,'4' = 'Progenitor cell','6' = 'Progenitor cell','21' = 'Progenitor cell',
                       '9' = 'Renal tubular epithelial cell','10' = 'Renal tubular epithelial cell','12' = 'Renal tubular epithelial cell','22' = 'Renal tubular epithelial cell','23' = 'Renal tubular epithelial cell','24' = 'Renal tubular epithelial cell','17' = 'Renal tubular epithelial cell',
                       '11' = 'Distal convoluted tubule','20' = 'Distal convoluted tubule','26' = 'Distal convoluted tubule',
                       '13' = 'Tubule cell','28' = 'Tubule cell',
                       '18' = 'Loop of Henle',
                       '20' = 'Proximal convoluted tubule',
                       '0' = 'Podocyte','3' = 'Podocyte','5' = 'Podocyte','7' = 'Podocyte','8' = 'Podocyte','14' = 'Podocyte','15' = 'Podocyte',
                       '1' = 'Interstitial cell','2' = 'Interstitial cell','19' = 'Interstitial cell',
                       '27'='Mesangial cell',
                       '16'='Endothelial cell',
                       '29' = 'Neutrophilic granulocyte','25' = 'Neutrophilic granulocyte')
dataobj$cell_type <- as.character(Idents(dataobj))
options(repr.plot.width=14, repr.plot.height=8, repr.plot.res = 200)
DimPlot(dataobj,reduction = "umap",label = T)

saveRDS(dataobj,paste0(rds,"Kidney_Kidney_Hochane2019.rds",sep=""))




















